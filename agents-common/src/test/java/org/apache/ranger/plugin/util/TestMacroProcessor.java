/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.ranger.plugin.util;

import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.HashMap;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;

/**
* @generated by Cursor
* @description <Unit Test for MacroProcessor class>
*/
@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestMacroProcessor {
    @Test
    public void test01_noMatchReturnsOriginal() {
        Map<String, String> macros = new HashMap<>();
        macros.put("FOO", "bar");
        MacroProcessor mp = new MacroProcessor(macros);
        assertEquals("x y", mp.expandMacros("x y"));
    }

    @Test
    public void test02_expandMultipleMacros() {
        Map<String, String> macros = new HashMap<>();
        macros.put("FOO", "bar");
        macros.put("HELLO", "world");
        MacroProcessor mp = new MacroProcessor(macros);
        assertEquals("bar world", mp.expandMacros("FOO HELLO"));
    }
}
