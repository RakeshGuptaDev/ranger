/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.ranger.plugin.model;

import org.apache.ranger.plugin.model.RangerPolicy.RangerPolicyResource;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.Arrays;
import java.util.HashMap;

/**
* @generated by Cursor
* @description <Unit Test for AuditFilter class>
*/
@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestAuditFilter {
    @Test
    public void test01_SettersGettersToString() {
        AuditFilter f = new AuditFilter();
        f.setAccessResult(AuditFilter.AccessResult.ALLOWED);
        HashMap<String, RangerPolicyResource> res = new HashMap<>();
        res.put("db", new RangerPolicyResource("db1"));
        f.setResources(res);
        f.setAccessTypes(Arrays.asList("read"));
        f.setActions(Arrays.asList("OPEN"));
        f.setUsers(Arrays.asList("u1"));
        f.setGroups(Arrays.asList("g1"));
        f.setRoles(Arrays.asList("r1"));
        f.setAction(Boolean.TRUE); // note: method name is setAction but sets isAudited

        Assertions.assertEquals(AuditFilter.AccessResult.ALLOWED, f.getAccessResult());
        Assertions.assertTrue(f.getResources().containsKey("db"));
        Assertions.assertEquals(Boolean.TRUE, f.getIsAudited());

        String s = f.toString();
        Assertions.assertTrue(s.contains("isAudited=true"));
    }
}
