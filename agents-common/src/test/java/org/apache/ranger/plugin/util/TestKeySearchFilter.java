/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.ranger.plugin.util;

import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

/**
* @generated by Cursor
* @description <Unit Test for KeySearchFilter class>
*/
@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestKeySearchFilter {
    @Test
    public void test01_params_setGet() {
        KeySearchFilter f = new KeySearchFilter();
        assertTrue(f.isEmpty());
        f.setParam("name", "v");
        assertEquals("v", f.getParam("name"));
    }

    @Test
    public void test02_equals_hash_and_basicFields() {
        KeySearchFilter f = new KeySearchFilter();
        KeySearchFilter g = new KeySearchFilter();
        assertEquals(f, g);
        assertEquals(f.hashCode(), g.hashCode());

        f.setStartIndex(3);
        f.setMaxRows(9);
        f.setGetCount(false);
        f.setSortBy("name");
        f.setSortType("desc");
        assertEquals(3, f.getStartIndex());
        assertEquals(9, f.getMaxRows());
        assertFalse(f.isGetCount());
        assertEquals("name", f.getSortBy());
        assertEquals("desc", f.getSortType());
    }
}
