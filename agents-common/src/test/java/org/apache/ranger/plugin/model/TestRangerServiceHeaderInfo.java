/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.ranger.plugin.model;

import org.apache.ranger.plugin.store.EmbeddedServiceDefsUtil;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

/**
* @generated by Cursor
* @description <Unit Test for RangerServiceHeaderInfo class>
*/
@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestRangerServiceHeaderInfo {
    @Test
    public void test01_DefaultConstructor() {
        RangerServiceHeaderInfo info = new RangerServiceHeaderInfo();
        Assertions.assertEquals(-1L, info.getId());
        Assertions.assertEquals("", info.getName());
        Assertions.assertEquals(Boolean.TRUE, info.getIsEnabled());
    }

    @Test
    public void test02_IdNameAndTagConstructor() {
        RangerServiceHeaderInfo info = new RangerServiceHeaderInfo(1L, "svc", true);
        Assertions.assertEquals(1L, info.getId());
        Assertions.assertEquals("svc", info.getName());
        Assertions.assertEquals(Boolean.TRUE, info.getIsTagService());
        Assertions.assertEquals(Boolean.FALSE, info.getIsGdsService());
    }

    @Test
    public void test03_WithTypeSetsTagFlag() {
        RangerServiceHeaderInfo tagInfo = new RangerServiceHeaderInfo(2L, "tagSvc", "Tag Service", EmbeddedServiceDefsUtil.EMBEDDED_SERVICEDEF_TAG_NAME);
        Assertions.assertEquals(Boolean.TRUE, tagInfo.getIsTagService());

        RangerServiceHeaderInfo other = new RangerServiceHeaderInfo(3L, "hdfsSvc", "HDFS", "hdfs");
        Assertions.assertEquals(Boolean.FALSE, other.getIsTagService());
    }

    @Test
    public void test04_WithTypeAndEnabled() {
        RangerServiceHeaderInfo info = new RangerServiceHeaderInfo(4L, "svc4", "dn4", "hive", Boolean.FALSE);
        Assertions.assertEquals(4L, info.getId());
        Assertions.assertEquals("svc4", info.getName());
        Assertions.assertEquals("dn4", info.getDisplayName());
        Assertions.assertEquals("hive", info.getType());
        Assertions.assertEquals(Boolean.FALSE, info.getIsEnabled());
    }
}
