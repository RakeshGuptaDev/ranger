/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.ranger.plugin.util;

import org.apache.commons.lang.StringUtils;
import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;

/**
* @generated by Cursor
* @description <Unit Test for RangerRESTUtils class>
*/
@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestRangerRESTUtils {
    @Test
    public void test01_getPluginId_withAndWithoutAppId() {
        RangerRESTUtils utils = new RangerRESTUtils();

        String service = "svc";
        String pluginIdNoApp = utils.getPluginId(service, null);
        assertNotNull(pluginIdNoApp);
        assertTrue(pluginIdNoApp.endsWith("-" + service));

        String pluginIdWithApp = utils.getPluginId(service, "app");
        assertNotNull(pluginIdWithApp);
        assertTrue(pluginIdWithApp.contains("app@"));
        assertTrue(pluginIdWithApp.endsWith("-" + service));
    }

    @Test
    public void test02_getPluginId_trimsLengthToMax() {
        RangerRESTUtils utils = new RangerRESTUtils();
        String service = "serviceName";
        String veryLongApp = StringUtils.repeat("a", 300);
        String pluginId = utils.getPluginId(service, veryLongApp);
        assertTrue(pluginId.length() <= 255);
    }

    @Test
    public void test03_hostnameAndAppIdParsing() {
        RangerRESTUtils.hostname = "hostX";
        RangerRESTUtils utils = new RangerRESTUtils();
        assertEquals("hostX", utils.getAgentHostname());

        String service = "service";
        String pluginId = "app@hostX-" + service;
        assertEquals("hostX", utils.getHostnameFromPluginId(pluginId, service));
        assertEquals("hostX", utils.getHostnameFromPluginId("hostX-" + service, service));
        assertEquals("hostX", utils.getHostnameFromPluginId("hostX-abc", null));
        assertEquals("app", utils.getAppIdFromPluginId(pluginId));
        assertEquals("**Unknown**", utils.getAppIdFromPluginId(""));
    }
}
